{"version":3,"sources":["Autocomplete.js","GenericChart.js","BarChart.js","LineChart.js","ScatterChart.js","Histogram.js","ChartTypeDropdown.js","DropdownLocations.js","RandomCharts.js","DropdownCorrelations.js","TabCorrelations.js","CorrelationChart.js","TabCorrelationGraphs.js","ConstraintsDropdown.js","MapComponent.js","SliderYear.js","KML.js","App.js","serviceWorker.js","index.js"],"names":["Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","city","query","handleScriptLoad","bind","assertThisInitialized","handlePlaceSelect","autocomplete","google","maps","places","Autocomplete","document","getElementById","types","addListener","addressObject","getPlace","address","address_components","setState","long_name","formatted_address","console","log","props","getLocationValue","react_default","a","createElement","lib_default","url","onLoad","Input","id","fluid","placeholder","icon","iconPosition","Component","BarChart","index_esm","width","height","chartType","loader","data","options","title","chartArea","hAxis","haxisTitle","minValue","vAxis","vaxisTitle","rootProps","data-testid","LineChart","chartOptions","key","text","value","DropdownExampleControlled","handleChange","e","_ref","getChartTypeDropdownValue","Dropdown","multiple","search","selection","onChange","Location","getLocationDropdownValue","locationList","TabRandom","handleInputChange","sendToPyData","objectSpread","location","target","handlePredictClick","event","isLoading","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","then","response","json","result","inputLocation","backendInfo","keys","length","chartDict","drawReady","handleCancelClick","i","currPlace","push","_this2","formatOptions","Segment","basic","Divider","hidden","DropdownLocations_Location","name","ChartTypeDropdown_DropdownExampleControlled","Button","onClick","horizontal","color","Header","as","includes","map","chart","idx","Label","size","src_LineChart","padded","src_BarChart","GenericChart","variables","TabCorrelations","Grid","stackable","columns","Column","DropdownCorrelations_DropdownExampleControlled","CorrelationChart","titleTextStyle","fontSize","bold","italic","tooltip","isHtml","trigger","legend","textStyle","maxLines","trendlines","0","type","showR2","visibleInLegend","getConstraints","MapComponent","compose","withProps","googleMapURL","loadingElement","style","containerElement","mapElement","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","lat","lng","isMarkerShown","position","geoArray","geoDict","path","ll","parseFloat","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","SliderYear","_useState","useState","_useState2","slicedToArray","setValue","settings","start","min","max","step","build","discrete","KML","constraints","handleDrawClick","ConstraintsDropdown_DropdownExampleControlled","src_SliderYear","src_MapComponent","List","Item","React","App","textAlign","Icon","Tab","panes","menuItem","render","RandomCharts","src_KML","src_TabCorrelations","Boolean","window","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10845ee9.chunk.js","sourcesContent":["// Imports\nimport React, { Component } from 'react';\n\n// Import Search Bar Components\nimport { Input } from 'semantic-ui-react'\n\n// Import React Scrit Libraray to load Google object\nimport Script from 'react-load-script';\n\nclass Search extends Component {\n  // Define Constructor\n  constructor() {\n    super();\n\n    // Declare State\n    this.state = {\n      city: '',\n      query: ''\n    };\n\n    // Bind Functions\n    this.handleScriptLoad = this.handleScriptLoad.bind(this);\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n\n  }\n\n  handleScriptLoad() {\n    // Declare Options For Autocomplete\n    var options = {\n      types: ['(cities)'],\n    };\n\n    // Initialize Google Autocomplete\n    /*global google*/ // To disable any eslint 'google not defined' errors\n    this.autocomplete = new google.maps.places.Autocomplete(\n      document.getElementById('autocomplete'),\n      options,\n    );\n\n    // Fire Event when a suggested name is selected\n    this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\n  }\n  \n  handlePlaceSelect() {\n\n    // Extract City From Address Object\n    let addressObject = this.autocomplete.getPlace();\n    let address = addressObject.address_components;\n\n    // Check if address is valid\n    if (address) {\n      // Set State\n      this.setState(\n        {\n          city: address[0].long_name,\n          query: addressObject.formatted_address,\n        }\n      );\n    }\n    console.log(\"city: \",this.state.city, \" | query: \", this.state.query);\n    this.props.getLocationValue(this.state.query);\n  }\n\n  render() {\n    return (\n      <div>\n        <Script\n          url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA6yj-nPBubFHHyrstLG17zfvhHYwsnpm8&libraries=places\"\n          onLoad={this.handleScriptLoad}\n        />\n\n        <Input \n          id=\"autocomplete\" \n          fluid\n          placeholder=\"Enter location\" \n          icon='map marker alternate' \n          iconPosition='left'\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default Search;","import React, {Component} from 'react'\n\nimport Chart from 'react-google-charts';\n\nclass BarChart extends Component {\n\trender(){\n    \treturn(\n    \t\t<div>\n\n    \t\t<Chart\n\t\t\t  width={'100%'}\n\t\t\t  height={'610px'}\n\t\t\t  chartType={this.props.chartType}\n\t\t\t  loader={<div>Loading Chart</div>}\n\t\t\t  data={this.props.data}\n\t\t\t  options={{\n\t\t\t    title: this.props.title,\n\t\t\t    chartArea: { width: '60%' },\n\t\t\t    hAxis: {\n\t\t\t      title: this.props.haxisTitle,\n\t\t\t      minValue: 0,\n\t\t\t    },\n\t\t\t    vAxis: {\n\t\t\t      title: this.props.vaxisTitle,\n\t\t\t    },\n\t\t\t  }}\n\t\t\t  // For tests\n\t\t\t  rootProps={{ 'data-testid': '1' }}\n\t\t\t/>\n\t\t\t</div>\n    \t);\n    }\n}\n\nexport default BarChart\n\n// // For barchart\n// \t\t\t    \n","import React, {Component} from 'react'\n\nimport Chart from 'react-google-charts';\n\nclass BarChart extends Component {\n\trender(){\n    \treturn(\n    \t\t<div>\n\n    \t\t<Chart\n\t\t\t  width={'100%'}\n\t\t\t  height={'610px'}\n\t\t\t  chartType=\"BarChart\"\n\t\t\t  loader={<div>Loading Chart</div>}\n\t\t\t  data={this.props.data}\n\t\t\t  options={{\n\t\t\t    title: this.props.title,\n\t\t\t    chartArea: { width: '50%' },\n\t\t\t    hAxis: {\n\t\t\t      title: this.props.haxisTitle,\n\t\t\t      minValue: 0,\n\t\t\t    },\n\t\t\t    vAxis: {\n\t\t\t      title: this.props.vaxisTitle,\n\t\t\t    },\n\t\t\t  }}\n\t\t\t  // For tests\n\t\t\t  rootProps={{ 'data-testid': '1' }}\n\t\t\t/>\n\t\t\t</div>\n    \t);\n    }\n}\n\nexport default BarChart","import React, {Component} from 'react'\n\nimport Chart from 'react-google-charts';\n\nclass LineChart extends Component {\n\trender(){\n    \treturn(\n    \t\t<div>\n\n    \t\t<Chart\n\t\t\t  width={'100%'}\n\t\t\t  height={'580px'}\n\t\t\t  chartType=\"LineChart\"\n\t\t\t  loader={<div>Loading Chart</div>}\n\t\t\t  data={this.props.data}\n\t\t\t  options={{\n\t\t\t  \ttitle: this.props.title,\n\t\t\t  \tchartArea: { width: '50%' },\n\t\t\t    hAxis: {\n\t\t\t      title: this.props.haxisTitle,\n\t\t\t    },\n\t\t\t    vAxis: {\n\t\t\t      title: this.props.vaxisTitle,\n\t\t\t    },\n\t\t\t  }}\n\t\t\t  rootProps={{ 'data-testid': '1' }}\n\t\t\t/>\n\n\t\t\t</div>\n    \t);\n    }\n}\n\nexport default LineChart","import React, {Component} from 'react'\n\nimport Chart from 'react-google-charts';\n\nclass ScatterChart extends Component {\n\trender(){\n    \treturn(\n    \t\t<div>\n\n    \t\t<Chart\n\t\t\t  width={'600px'}\n\t\t\t  height={'400px'}\n\t\t\t  chartType=\"ScatterChart\"\n\t\t\t  loader={<div>Loading Chart</div>}\n\t\t\t  data={this.props.data}\n\t\t\t  options={{\n\t\t\t    title: this.props.title,\n\t\t\t    hAxis: { title: this.props.haxisTitle, minValue: 0, maxValue: 15 },\n\t\t\t    vAxis: { title: this.props.vaxisTitle, minValue: 0, maxValue: 15 },\n\t\t\t    legend: 'none',\n\t\t\t  }}\n\t\t\t  rootProps={{ 'data-testid': '1' }}\n\t\t\t/>\n\n\t\t\t</div>\n    \t);\n    }\n}\n\nexport default ScatterChart\n\n\n","import React, {Component} from 'react'\n\nimport Chart from 'react-google-charts';\n\nclass Histogram extends Component {\n\trender(){\n    \treturn(\n    \t\t<div>\n\n    \t\t\t<Chart\n\t\t\t\t  width={'500px'}\n\t\t\t\t  height={'300px'}\n\t\t\t\t  chartType=\"Histogram\"\n\t\t\t\t  loader={<div>Loading Chart</div>}\n\t\t\t\t  data={this.props.data}\n\t\t\t\t  options={{\n\t\t\t\t    title: this.props.title,\n\t\t\t\t    legend: { position: 'none' },\n\t\t\t\t  }}\n\t\t\t\t  rootProps={{ 'data-testid': '1' }}\n\t\t\t\t/>\n\n\t\t\t</div>\n    \t);\n    }\n}\n\nexport default Histogram","import React, { Component } from 'react'\nimport { Grid, Segment, Dropdown } from 'semantic-ui-react'\n\n// const chartOptions = [\n//   { key: 'bar', text: 'Bar', value: 'bar' },\n//   { key: 'line', text: 'Line', value: 'line' },\n//   { key: 'scatter', text: 'Scatter', value: 'scatter' },\n//   { key: 'histogram', text: 'Histogram', value: 'histogram' },\n// ]\n\n\nconst chartOptions = [\n  { key: 'singleton', text: 'Singleton', value: 'singleton' },\n  { key: 'stateComparison', text: 'StateComparison', value: 'stateComparison' },\n  { key: 'correlation', text: 'Correlation', value: 'correlation' },\n  { key: 'sibling', text: 'Sibling', value: 'sibling' },\n  { key: 'sibling-Year', text: 'Sibling-Year', value: 'sibling-Year' },\n  { key: 'top50Overall', text: 'Top50Overall', value: 'top50Overall' },\n]\n\nexport default class DropdownExampleControlled extends Component {\n  state = { value: []}\n\n  handleChange = (e, { value }) => {\n    console.log(\"ChartTypeDropdown.js: \", value);\n    this.setState({ value });\n    this.props.getChartTypeDropdownValue(value);\n  }\n\n  render() {\n    const { value } = this.state\n\n    return (\n          <Dropdown\n            placeholder='Chart type'\n            fluid\n            multiple\n            search\n            selection\n            options={chartOptions}\n            onChange={this.handleChange.bind(this)}\n            value={value}\n          />\n\n    )\n  }\n}\n\n// <Grid.Column>\n//           <Segment secondary>\n//             <pre>Current value: {value}</pre>\n//           </Segment>\n//         </Grid.Column>\n","import React, { Component } from 'react'\nimport { Grid, Segment, Dropdown } from 'semantic-ui-react'\n\n// const chartOptions = [\n//   { key: 'bar', text: 'Bar', value: 'bar' },\n//   { key: 'line', text: 'Line', value: 'line' },\n//   { key: 'scatter', text: 'Scatter', value: 'scatter' },\n//   { key: 'histogram', text: 'Histogram', value: 'histogram' },\n// ]\n\n// const chartOptions = [\n//   { key: 'santaclara', text: 'Santa Clara', value: 'santaclara' },\n//   { key: 'sanjose', text: 'SanJose', value: 'sanjose' },\n// ]\n\n\n\nexport default class Location extends Component {\n  state = { value: 'Select location'}\n\n  handleChange = (e, { value }) => {\n    console.log(\"DropdownLocations.js: \", value);\n    this.setState({ value });\n    this.props.getLocationDropdownValue(value);\n  }\n\n  render() {\n    const { value } = this.state\n\n    return (\n          <Dropdown\n            placeholder='Select location'\n            fluid\n            search\n            selection\n            options={this.props.locationList}\n            onChange={this.handleChange.bind(this)}\n          />\n\n    )\n  }\n}\n\n// <Grid.Column>\n//           <Segment secondary>\n//             <pre>Current value: {value}</pre>\n//           </Segment>\n//         </Grid.Column>\n","import React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server'\nimport './App.css';\n\nimport {Segment, Divider, Input, Button, Container, Header, Reveal, Label, Icon, Image } from 'semantic-ui-react'\n\nimport Autocomplete from './Autocomplete';\nimport GenericChart from './GenericChart';\nimport BarChart from './BarChart';\nimport LineChart from './LineChart';\nimport ScatterChart from './ScatterChart';\nimport Histogram from './Histogram';\n\nimport ChartTypeDropdown from './ChartTypeDropdown';\nimport DropdownLocations from './DropdownLocations';\n\n\n\nclass TabRandom extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      drawReady: false,\n      chartDict: {},\n      locationList: [],\n      inputLocation: \"\",\n      sendToPyData: {\n        chartType: [],\n        location: \"\",\n      },\n      result: \"\"\n    };\n  }\n\n\n  formatOptions(locationList) {\n    const chartOptions = [];\n\n    for (var i = 0; i < locationList.length; i++) {\n      var currPlace = locationList[i]\n      chartOptions.push({\n        key: currPlace,\n        text: currPlace,\n        value: currPlace\n      })\n    }\n\n    return chartOptions;\n  }\n\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(this.state.sendToPyData)\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"componentDidMount called\")\n        console.log(\"componentDidMount response.result: \",response.result);\n        console.log(\"componentDidMount response.locationList: \",response.backendInfo); // [locationList, chartDict]\n        if (typeof(response.backendInfo) !== 'undefined' && typeof(response.backendInfo[0]) !== 'undefined') {\n          this.setState({\n            locationList: this.formatOptions(response.backendInfo[0]),\n          });\n        }\n        \n      }\n    );\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      sendToPyData: {...this.state.sendToPyData, location: e.target.value}\n    });\n  };\n\n\n  getChartTypeDropdownValue = value => {\n    console.log(\"App.js getChartTypeDropdownValue: \", value); \n    this.setState({\n      sendToPyData: {...this.state.sendToPyData, chartType: value}\n    });\n  }\n\n\n  getLocationDropdownValue = value => {\n    console.log(\"App.js getLocationDropdownValue: \", value); \n    this.setState({\n      sendToPyData: {...this.state.sendToPyData, location: value}\n    });\n  }\n\n  handlePredictClick = (event) => {\n    console.log(\"handlePredictClick\");\n    const sendToPyData = this.state.sendToPyData;\n    console.log(\"sendToPyData: \", sendToPyData);\n    this.setState({ isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(sendToPyData)\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"response.result: \",response.result); \n        console.log(\"response.inputLocation: \",response.inputLocation); \n        console.log(\"response.chartDict: \",response.backendInfo[1]); // [locationList, chartDict]\n        if (Object.keys(response.backendInfo[1]).length > 0) {\n          this.setState({\n            result: response.result,\n            chartDict: response.backendInfo[1],\n            isLoading: false,\n            drawReady: true,\n          });\n        } \n      }\n    );\n  }\n\n  handleCancelClick = (event) => {\n    this.setState({ result: \"\" });\n  }\n\n\n  render() {\n    return (\n      <div>\n\n      <Segment basic>\n\n        <Divider hidden />\n\n        <DropdownLocations\n          getLocationDropdownValue={this.getLocationDropdownValue.bind(this)}\n          name=\"chartType\"\n          locationList={this.state.locationList}\n          value={this.state.sendToPyData[\"chartType\"]}\n        />\n\n        <Divider hidden />\n\n        <ChartTypeDropdown \n          getChartTypeDropdownValue={this.getChartTypeDropdownValue.bind(this)}\n          name=\"chartType\"\n          value={this.state.sendToPyData[\"chartType\"]}\n        />\n\n        <Divider hidden />\n\n        <Button onClick={this.handlePredictClick}>\n          Find interesting graphs\n        </Button>\n\n        <Divider hidden />\n\n\n\n        <Divider horizontal color='teal'><Header as='h2' color='blue'>Singleton</Header></Divider>\n\n        {this.state.drawReady && this.state.sendToPyData[\"chartType\"].includes(\"singleton\") &&\n          this.state.chartDict[\"Singleton\"].map((chart, idx) => (  \n            <div key={idx}>\n              <Segment >\n\n              <Label as='a' color='black' size='big' basic>\n                {idx+1}\n              </Label>\n\n                <LineChart\n                  title={chart[\"title\"]}\n                  data={chart[\"data\"]}\n                  chartType={chart[\"chartType\"]} \n                  haxisTitle={chart[\"haxisTitle\"]}\n                  vaxisTitle={chart[\"vaxisTitle\"]}\n                />   \n                <Segment padded>\n                  <p>Description: {chart[\"description\"]} </p>\n                </Segment>\n              </Segment>\n              <Divider hidden />\n            </div>\n        ))}\n\n        <Divider horizontal color='teal'><Header as='h2' color='blue'>State Comparison</Header></Divider>\n\n        {this.state.drawReady && this.state.sendToPyData[\"chartType\"].includes(\"stateComparison\") &&\n          this.state.chartDict[\"StateComparison\"].map((chart, idx) => (  \n            <div key={idx}>\n              <Segment >\n\n                <Label as='a' color='black' size='big' basic>\n                  {idx+1}\n                </Label>\n                <LineChart\n                  title={chart[\"title\"]}\n                  data={chart[\"data\"]}\n                  chartType={chart[\"chartType\"]} \n                  haxisTitle={chart[\"haxisTitle\"]}\n                  vaxisTitle={chart[\"vaxisTitle\"]}\n                />\n                <Segment padded>\n                  <p>Description: {chart[\"description\"]} </p>\n                </Segment>\n              </Segment>\n              <Divider hidden />\n            </div>\n        ))}\n\n        <Divider horizontal color='teal'><Header as='h2' color='blue'>Correlation</Header></Divider>\n\n        {this.state.drawReady && this.state.sendToPyData[\"chartType\"].includes(\"correlation\") &&\n          this.state.chartDict[\"Correlation\"].map((chart, idx) => (  \n            <div key={idx}>\n              <Segment >\n                <Label as='a' color='black' size='big' basic>\n                  {idx+1}\n                </Label>\n                <LineChart\n                  title={chart[\"title\"]}\n                  data={chart[\"data\"]}\n                  chartType={chart[\"chartType\"]} \n                  haxisTitle={chart[\"haxisTitle\"]}\n                  vaxisTitle={chart[\"vaxisTitle\"]}\n                />\n                <Segment padded>\n                  <p>Description: {chart[\"description\"]} </p>\n                </Segment>\n              </Segment>\n              <Divider hidden />\n            </div>\n        ))}\n\n        <Divider horizontal color='teal'><Header as='h2' color='blue'>Sibling</Header></Divider>\n\n        {this.state.drawReady && this.state.sendToPyData[\"chartType\"].includes(\"sibling\") &&\n          this.state.chartDict[\"Sibling\"].map((chart, idx) => (  \n            <div key={idx}>\n              <Segment >\n                <Label as='a' color='black' size='big' basic>\n                  {idx+1}\n                </Label>\n                <LineChart\n                  title={chart[\"title\"]}\n                  data={chart[\"data\"]}\n                  chartType={chart[\"chartType\"]} \n                  haxisTitle={chart[\"haxisTitle\"]}\n                  vaxisTitle={chart[\"vaxisTitle\"]}\n                />\n                <Segment padded>\n                  <p>Description: {chart[\"description\"]} </p>\n                </Segment>\n              </Segment>\n              <Divider hidden />\n            </div>\n        ))}\n\n        <Divider horizontal color='teal'><Header as='h2' color='blue'>Sibling-Year</Header></Divider>\n\n        {this.state.drawReady && this.state.sendToPyData[\"chartType\"].includes(\"sibling-Year\") &&\n          this.state.chartDict[\"Sibling-Year\"].map((chart, idx) => (  \n            <div key={idx}>\n              <Segment >\n                <Label as='a' color='black' size='big' basic>\n                  {idx+1}\n                </Label>\n                <BarChart\n                  title={chart[\"title\"]}\n                  data={chart[\"data\"]}\n                  chartType={chart[\"chartType\"]} \n                  haxisTitle={chart[\"haxisTitle\"]}\n                  vaxisTitle={chart[\"vaxisTitle\"]}\n                />\n                <Segment padded>\n                  <p>Description: {chart[\"description\"]} </p>\n                </Segment>\n              </Segment>\n              <Divider hidden />\n            </div>\n        ))}\n\n        {this.state.drawReady && this.state.sendToPyData[\"chartType\"].includes(\"top50Overall\") &&\n          this.state.chartDict[\"Top50Overall\"].map((chart, idx) => (  \n            <div key={idx}>\n              <Segment >\n                <Label as='a' color='black' size='big' basic>\n                  {idx+1}\n                </Label>\n                <GenericChart\n                  title={chart[\"title\"]}\n                  data={chart[\"data\"]}\n                  chartType={chart[\"chartType\"]} \n                  haxisTitle={chart[\"haxisTitle\"]}\n                  vaxisTitle={chart[\"vaxisTitle\"]}\n                />\n                <Segment padded>\n                  <p>Description: {chart[\"description\"]} </p>\n                </Segment>\n              </Segment>\n              <Divider hidden />\n            </div>\n        ))}\n\n\n      </Segment>\n      </div>\n    );\n  }\n}\n\nexport default TabRandom;\n\n        // <Header as='h5' color='teal'>{this.state.result}</Header>\n\n        // <Divider hidden />\n\n        // <Divider hidden />\n\n\n        // <Button onClick={!this.state.isLoading ? this.handlePredictClick : null}>\n        //   Find interesting graphs\n        // </Button>\n\n","import React, { Component } from 'react'\nimport { Grid, Segment, Dropdown } from 'semantic-ui-react'\n\nconst variables = [\n  { key: 'Medium Income', text: 'Medium Income', value: 'Medium Income' },\n  { key: 'Employment', text: 'Employment', value: 'Employment' },\n  { key: 'Gender', text: 'Gender', value: 'Gender' },\n  { key: 'Place Of Birth', text: 'Place of birth', value: 'Place of Birth' },\n  { key: 'Race', text: 'Race', value: 'Race' },\n]\n\nexport default class DropdownExampleControlled extends Component {\n  state = { value: []}\n\n  handleChange = (e, { value }) => {\n    // console.log(\"DropdownCorrelations.js: \", value);\n    // this.setState({ value });\n    // this.props.getConstraints(value);\n  }\n\n  render() {\n    const { value } = this.state\n\n    return (\n          <Dropdown\n            // onChange={this.handleChange.bind(this)}\n\n            placeholder={this.props.placeholder}\n            fluid\n            search\n            selection\n            options={variables}\n          />\n\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Grid, Image, Segment, Icon, Divider, Button } from 'semantic-ui-react'\n\nimport Autocomplete from './Autocomplete';\nimport DropdownCorrelations from './DropdownCorrelations';\n\n\n\nclass TabCorrelations extends Component {\n  // getConstraints = value => {\n  //   console.log(\"TabCorrelations.js getConstraints: \", value); \n  // }\n\n  getLocationValue = value => {\n    // console.log(\"App.js getLocationValue: \", value); \n    // this.setState({\n    //   sendToPyData: {...this.state.sendToPyData, location: value}\n    // });\n  }\n\n  render() {\n    return (\n      <div>\n      <Button >\n        Graph correlations\n      </Button>\n      <Divider hidden />\n      <Grid stackable columns={3}>\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Grid stackable columns={3}>\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Grid stackable columns={3}>\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <Autocomplete \n              getLocationValue={this.getLocationValue.bind(this)}\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 1'\n            />\n            <Divider hidden />\n            <DropdownCorrelations \n              placeholder='Variable 2'\n            />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      </div>\n    );\n  }\n}\n\nexport default TabCorrelations\n\n","import React, {Component} from 'react'\nimport Chart from 'react-google-charts'\n\n\nclass CorrelationChart extends Component {\n  render(){\n    return(\n      <Chart\n        // width={'500px'}\n        height={'300px'}\n        chartType=\"ScatterChart\"\n        loader={<div>Loading Chart</div>}\n        data={[\n          ['Diameter', 'Age'],\n          [8, 37],\n          [4, 19.5],\n          [11, 52],\n          [4, 22],\n          [3, 16.5],\n          [6.5, 32.8],\n          [14, 72],\n        ]}\n\n        options={{\n          title: 'Age of sugar maples vs. trunk diameter, in inches',\n          titleTextStyle: {\n            color: 'black',    \n            // fontName: 'Times New Roman', \n            fontSize: 16, // 12, 18 (don't specify px)\n            bold: false,    \n            italic: false   \n          },\n          hAxis: { title: 'Diameter' },\n          vAxis: { title: 'Age' },\n          chartArea: { width: '40%', height: '80%'},\n          tooltip: { isHtml: true, trigger: \"visible\", color: 'black' },\n          // legend: 'none',\n          legend: {\n            textStyle: {color: 'black', fontSize: 12},\n            maxLines: 5\n          },\n          trendlines: { \n            0: {\n              tooltip: false,\n              type: 'linear',\n              showR2: true,\n              visibleInLegend: true\n            }\n          },\n        }}\n        rootProps={{ 'data-testid': '1' }}\n      />\n    );\n  }\n}\nexport default CorrelationChart\n\n        // options={{\n\n        //   chartArea: { width: '60%', height: '80%'},\n        //   tooltip: { isHtml: true, trigger: \"visible\" },\n        //   // legend: 'none',\n        //   legend: {\n        //     textStyle: {color: 'black', fontSize: 12},\n        //     maxLines: 5\n        //   },\n        //   trendlines: this.props.display_trend && { \n        //     0: {\n        //       tooltip: false,\n        //       type: 'linear',\n        //       showR2: true,\n        //       visibleInLegend: true\n        //     }\n        //   },\n        // }}\n","import React, { Component } from 'react';\nimport { Grid, Image, Segment, Icon, Divider, Button } from 'semantic-ui-react'\n\nimport Autocomplete from './Autocomplete';\nimport CorrelationChart from './CorrelationChart';\nimport DropdownCorrelations from './DropdownCorrelations';\n\n\n\nclass TabCorrelations extends Component {\n  // getConstraints = value => {\n  //   console.log(\"TabCorrelations.js getConstraints: \", value); \n  // }\n\n  getLocationValue = value => {\n    // console.log(\"App.js getLocationValue: \", value); \n    // this.setState({\n    //   sendToPyData: {...this.state.sendToPyData, location: value}\n    // });\n  }\n\n  render() {\n    return (\n      <div>\n\n      <Divider hidden />\n      <Grid stackable columns={3}>\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Grid stackable columns={3}>\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      <Grid stackable columns={3}>\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n\n        <Grid.Column>\n          <Segment>\n            <CorrelationChart />\n          </Segment>\n        </Grid.Column>\n      </Grid>\n      </div>\n    );\n  }\n}\n\nexport default TabCorrelations\n\n","import React, { Component } from 'react'\nimport { Grid, Segment, Dropdown } from 'semantic-ui-react'\n\nconst chartOptions = [\n  { key: 'USDollar100000To124999', text: 'USDollar100000To124999', value: 'USDollar100000To124999' },\n  { key: 'USDollar10000To14999', text: 'USDollar10000To14999', value: 'USDollar10000To14999' },\n  { key: 'USDollar125000To149999', text: 'USDollar125000To149999', value: 'USDollar125000To149999' },\n  { key: 'USDollar150000To199999', text: 'USDollar150000To199999', value: 'USDollar150000To199999' },\n  { key: 'USDollar15000To19999', text: 'USDollar15000To19999', value: 'USDollar15000To19999' },\n  { key: 'USDollar200000Onwards', text: 'USDollar200000Onwards', value: 'USDollar200000Onwards' },\n  { key: 'USDollar20000To24999', text: 'USDollar20000To24999', value: 'USDollar20000To24999' },\n  { key: 'USDollar25000To29999', text: 'USDollar25000To29999', value: 'USDollar25000To29999' },\n  { key: 'USDollar30000To34999', text: 'USDollar30000To34999', value: 'USDollar30000To34999' },\n  { key: 'USDollar35000To39999', text: 'USDollar35000To39999', value: 'USDollar35000To39999' },\n  { key: 'USDollar40000To44999', text: 'USDollar40000To44999', value: 'USDollar40000To44999' },\n  { key: 'USDollar50000To59999', text: 'USDollar50000To59999', value: 'USDollar50000To59999' },\n  { key: 'USDollar60000To74999', text: 'USDollar60000To74999', value: 'USDollar60000To74999' },\n  { key: '75000To99999', text: '75000To99999', value: '75000To99999' },\n  { key: 'USDollarUpto10000', text: 'USDollarUpto10000', value: 'USDollarUpto10000' },\n  { key: 'Race', text: 'Race', value: 'Race' },\n]\n\nexport default class DropdownExampleControlled extends Component {\n  state = { value: []}\n\n  handleChange = (e, { value }) => {\n    console.log(\"ConstraintsDropdown.js: \", value);\n    this.setState({ value });\n    this.props.getConstraints(value);\n  }\n\n  render() {\n    const { value } = this.state\n\n    return (\n          <Dropdown\n            placeholder='Select Constraints'\n            fluid\n            multiple\n            search\n            selection\n            options={chartOptions}\n            onChange={this.handleChange.bind(this)}\n            value={value}\n          />\n\n    )\n  }\n}\n","import React from \"react\"\nimport { compose, withProps } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker,Polygon } from \"react-google-maps\"\n\nimport {Segment, Divider, Input, Button, Container, Header } from 'semantic-ui-react'\n\n// All coords is an array of dicts\n// Each dict contains the coordinates as well as the color\n\n\n// Autcomplete url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyA6yj-nPBubFHHyrstLG17zfvhHYwsnpm8&libraries=places\"\nconst MapComponent = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyA6yj-nPBubFHHyrstLG17zfvhHYwsnpm8\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) =>\n    <div>\n    <GoogleMap defaultZoom={6} defaultCenter={{ lat: 33.4914, lng: -86.9824 }}>\n        {props.isMarkerShown && <Marker position={{ lat: 33.4914, lng: -86.9824 }} />}\n\n        {(props.geoArray.length > 0) && props.geoArray.map((geoDict, idx) => (  \n            <div key={idx}>\n              <Polygon\n\t            path={\n\t            \tgeoDict[\"coords\"].map( ll => {\n\t    \t\t\t\treturn { lat: parseFloat(ll.lng), lng: parseFloat(ll.lat) }\n\t\t\t\t\t})\n\t            }\n\t            //key={1}\n\t            options={{\n\t                fillColor: geoDict[\"color\"],\n\t                fillOpacity: 0.3,\n\t                strokeColor: \"#000\",\n\t                strokeOpacity: 1,\n\t                strokeWeight: 1\n\t            }} />\n            </div>\n        ))}\n\n    </GoogleMap>\n\n    </div>\n)\n\nexport default MapComponent;\n\n\n// {props.geoArray.map((geoDict, idx) => (  \n//             <div key={idx}>\n//               <Polygon\n// \t            path={\n// \t            \tgeoDict[\"coords\"].map( ll => {\n// \t    \t\t\t\treturn { lat: parseFloat(ll.lng), lng: parseFloat(ll.lat) }\n// \t\t\t\t\t})\n// \t            }\n// \t            //key={1}\n// \t            options={{\n// \t                fillColor: geoDict[\"color\"],\n// \t                fillOpacity: 0.3,\n// \t                strokeColor: \"#000\",\n// \t                strokeOpacity: 1,\n// \t                strokeWeight: 1\n// \t            }} />\n//             </div>\n//         ))}\n\n\n","import React, { useState } from \"react\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Label, Grid, Input, Segment, Divider } from \"semantic-ui-react\";\n\nconst SliderYear = props => {\n\nconst [value, setValue] = useState(2010);\nconst settings = {\n    start: 2015,\n    min: 2010,\n    max: 2017,\n    step: 1,\n    onChange: value => {\n        setValue(value);\n    }\n};\n\n    \n\n \n  return (\n    <div>\n      <Segment>\n        <Slider discrete value color=\"teal\" settings={settings} />\n        <Divider hidden />\n        <Label basic color=\"teal\">\n            Year: {value}\n        </Label>\n      </Segment>\n    </div>\n  );\n};\n \nexport default SliderYear;","import React from \"react\"\nimport { compose, withProps } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker,Polygon } from \"react-google-maps\"\n\nimport {Segment, Divider, Input, Button, Container, Header, List } from 'semantic-ui-react'\n\nimport ConstraintsDropdown from './ConstraintsDropdown';\nimport MapComponent from './MapComponent';\nimport SliderYear from './SliderYear';\n\n\nclass KML extends React.Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      drawReady: false,\n      sendToPyData: {\n        chartType: [],\n        constraints: [],\n        location: \"\",\n      },\n      geoArray: [],\n      result: \"empty\"\n\n    };\n  }\n\n  getConstraints = value => {\n    console.log(\"App.js getConstraints: \", value); \n    this.setState({\n      sendToPyData: {...this.state.sendToPyData, constraints: value}\n    });\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      sendToPyData: {...this.state.sendToPyData, location: e.target.value}\n    });\n  };\n\n\n\n  handleDrawClick = (event) => {\n    console.log(\"KML handleDrawClick\");\n    const sendToPyData = this.state.sendToPyData;\n    console.log(\"KML sendToPyData: \", sendToPyData);\n    this.setState({ isLoading: true });\n    fetch('http://127.0.0.1:5000/prediction/', \n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify(sendToPyData)\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(\"KML response.result: \",response.result);\n        console.log(\"KML response.geoArray: \",response.geoArray);\n        this.setState({\n          geoArray: response.geoArray,\n          isLoading: false,\n          drawReady: true,\n        });\n        \n      }\n    );\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <Input \n          placeholder='Enter state'\n          onChange={this.handleInputChange} \n        />\n\n        <Divider hidden />\n\n        <ConstraintsDropdown \n          getConstraints={this.getConstraints.bind(this)}\n          name=\"chartType\"\n          value={this.state.sendToPyData[\"constraints\"]}\n        />\n\n        <Divider hidden />\n\n        <SliderYear />\n\n        <Divider hidden />\n\n        <MapComponent\n          isMarkerShown={true}\n          geoArray={this.state.geoArray}\n        />\n\n\n        <Divider hidden />\n\n        <Button onClick={!this.state.isLoading ? this.handleDrawClick : null}>\n          Draw Polygons\n        </Button>\n\n        <Divider hidden />\n\n        <Header as='h4'>Count</Header>\n\n        <List>\n          <List.Item>\n            <Header as='h5' color='violet'>\n              [517., 544., 557., 587., 588., 667., 693., 694., 697.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='blue'>\n              [ 741.,  742.,  888.,  937.,  945.,  982.,  998., 1024., 1045.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='teal'>\n              [1145., 1160., 1162., 1171., 1182., 1217., 1245., 1252., 1319.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='green'>\n              [1408., 1465., 1479., 1497., 1498., 1552., 1615., 1618.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='olive'>\n              [1691., 1799., 1832., 1962., 2001., 2048., 2082., 2084.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='yellow'>\n              [2263., 2298., 2342., 2343., 2651., 2676., 2744., 2878.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='orange'>\n              [3364., 3374., 3515., 3621., 3631., 3756., 3807., 3903.]\n            </Header>\n          </List.Item>\n\n          <List.Item>\n            <Header as='h5' color='red'>\n              [ 4680.,  4713.,  6669.,  7709.,  9147.,  9304., 15803., 26010.]\n            </Header>\n          </List.Item>\n        </List>\n\n      </div>\n    );\n  }\n}\n\nexport default KML;\n\n\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Icon, Tab, Segment, Divider, Input, Button, Container, Header } from 'semantic-ui-react'\n\n// import TabRandom from './TabRandom';\nimport RandomCharts from './RandomCharts';\nimport TabCorrelations from './TabCorrelations';\nimport TabCorrelationGraphs from './TabCorrelationGraphs';\n\nimport KML from './KML';\n\n// removed KML and correlation\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <div>\n        <Divider hidden />\n        <Header as='h1' textAlign='centered' color='blue'>\n          D a t a &nbsp; C o m m o n s  &nbsp; G r a p h s &nbsp;&nbsp;\n          <Icon name='line graph'/>\n        </Header>\n        <Tab panes={[\n\n          { \n            menuItem: 'Interesting charts', \n            render: () => <Segment basic>\n              <RandomCharts />\n            </Segment> \n          },\n          {\n            menuItem: 'KML',\n            render: () => <Segment basic>\n              <KML />\n\n            </Segment>\n          },\n          { menuItem: '', \n            render: () => <Segment basic>\n              <TabCorrelations />\n            </Segment> \n          },\n\n        ]} />\n\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// <KML isMarkerShown={true} />\n\n          // { \n          //   menuItem: 'Correlation Graphs', \n          //   render: () => <Segment basic>\n          //     <TabCorrelationGraphs />\n          //   </Segment> \n          // },","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}